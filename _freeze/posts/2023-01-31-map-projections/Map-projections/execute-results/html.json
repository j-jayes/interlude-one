{
  "hash": "12c31eea35582ad3746df22794e02222",
  "result": {
    "markdown": "---\ntitle: \"Map projections in R\"\ndescription: |\n  A post on how to change projections for mapping and save out the new shapefiles.\nimage: preview.png\nauthor:\n  - name: Jonathan Jayes\ndate: 2023-01-31\nexecute: \n  echo: true\n  warning: false\n  message: false\n---\n\n\n## Purpose\n\nTransform two shapefiles to the same coordinate system and plot them together.\n\n### Getting started\n\nWe load the `tidyverse` for data manipulation, the `sf` package fo working with maps and set the ggplot theme to a light one for more attractive plots.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(sf)\ntheme_set(theme_light())\n```\n:::\n\n\n### Read in the shapefiles\n\nWe read in our shapefiles with the `st_read()` function, and ask for output of the crs with the `st_crs()` function so that we can see what it is.\n\n\n\n\n\nFor Sweden we can see we are told in he last line **Projected CRS: SWEREF99 TM**.\n\n**SWEREF99 TM** a projection favoured by the statistics body in Sweden.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsweden_map <- st_read(here::here(\"posts\", \n                                 \"2023-01-31-map-projections\", \n                                 \"data\",\n                                 \"sweden_map.shp\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `sweden_map' from data source \n  `C:\\Users\\User\\Documents\\Recon\\interlude-one\\posts\\2023-01-31-map-projections\\data\\sweden_map.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1 feature and 63 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 278651.2 ymin: 6134621 xmax: 917514.5 ymax: 7668755\nProjected CRS: SWEREF99 TM\n```\n:::\n:::\n\n\nFor Norway it is **WGS 84**, a very common projection with full name **World Geodetic System 1984**.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnorway_map <- st_read(here::here(\"posts\", \n                                 \"2023-01-31-map-projections\", \n                                 \"data\", \n                                 \"norway_map.shp\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `norway_map' from data source \n  `C:\\Users\\User\\Documents\\Recon\\interlude-one\\posts\\2023-01-31-map-projections\\data\\norway_map.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1 feature and 63 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -9.098877 ymin: 58.02095 xmax: 33.6293 ymax: 80.47783\nGeodetic CRS:  WGS 84\n```\n:::\n:::\n\n\nLet's have a quick look at them side by side.\n\n\n::: {.cell .column-page layout-ncol=\"2\"}\n\n```{.r .cell-code}\nggplot()+ \n  geom_sf(data = sweden_map) +\n  labs(title = \"Sweden\",\n       subtitle = \"CRS = SWEREF99\")\n```\n\n::: {.cell-output-display}\n![Sweden](Map-projections_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot()+ \n  geom_sf(data = norway_map) +\n  labs(title = \"Norway\",\n       subtitle = \"CRS = WGS84\")\n```\n\n::: {.cell-output-display}\n![Norway](Map-projections_files/figure-html/unnamed-chunk-5-2.png){width=672}\n:::\n:::\n\n\n\n### Set the crs as the same\n\nWe'll use EPSG 4326 or WGS84. We can use the `st_transform()` function, specifying the crs that we want for our new map object, which we name `sweden_map_4326` to avoid confusion.\n\nThis is what the CRS now looks like for Sweden - the same as the one for Norway.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsweden_map_4326 <- st_transform(sweden_map, crs = 4326)\n\nsweden_map_4326 %>% \n  st_crs()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCoordinate Reference System:\n  User input: EPSG:4326 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"geodetic latitude (Lat)\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"geodetic longitude (Lon)\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    USAGE[\n        SCOPE[\"Horizontal component of 3D system.\"],\n        AREA[\"World.\"],\n        BBOX[-90,-180,90,180]],\n    ID[\"EPSG\",4326]]\n```\n:::\n:::\n\n\n### Let's plot them together\n\nWe can plot the together and choose some nice colours from the national flags for the fill aesthetic.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n  geom_sf(data = sweden_map_4326, fill = \"#03558A\") +\n  geom_sf(data = norway_map, fill = \"#B40C2E\")\n```\n\n::: {.cell-output-display}\n![Map of Sweden and Norway](Map-projections_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n### Write out the file for Sweden individually\n\nWe can save the shapefile for Sweden with the `st_write()` command if we want to keep the maps separate.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsweden_map_4326 %>% \n  st_write(here::here(\"posts\", \n                      \"2023-01-31-map-projections\", \n                      \"data\", \n                      \"sweden_map_4326.shp\"), delete_dsn = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nDeleting source `C:/Users/User/Documents/Recon/interlude-one/posts/2023-01-31-map-projections/data/sweden_map_4326.shp' using driver `ESRI Shapefile'\nWriting layer `sweden_map_4326' to data source \n  `C:/Users/User/Documents/Recon/interlude-one/posts/2023-01-31-map-projections/data/sweden_map_4326.shp' using driver `ESRI Shapefile'\nWriting 1 features with 63 fields and geometry type Multi Polygon.\n```\n:::\n:::\n\n\n### Join the maps together\n\nAlternatively we can join together the maps as one object and then save one shapefile with the maps combined. \n\nTo do this, we first bind the two objects together using `bind_rows()` command and write it out with the same `st_write()` command.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncombined_map <- bind_rows(norway_map, sweden_map_4326)\n\ncombined_map %>% st_write(here::here(\"posts\", \n                                     \"2023-01-31-map-projections\", \n                                     \"data\", \n                                     \"shapefile_combined.shp\"), delete_dsn = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nDeleting source `C:/Users/User/Documents/Recon/interlude-one/posts/2023-01-31-map-projections/data/shapefile_combined.shp' using driver `ESRI Shapefile'\nWriting layer `shapefile_combined' to data source \n  `C:/Users/User/Documents/Recon/interlude-one/posts/2023-01-31-map-projections/data/shapefile_combined.shp' using driver `ESRI Shapefile'\nWriting 2 features with 63 fields and geometry type Multi Polygon.\n```\n:::\n:::\n\n\nIf we want to get rid of the borders between our objects, we can use the `st_union()` command:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunion_map <- st_union(norway_map, sweden_map_4326)\n```\n:::\n\n\nWe can compare the outputs here:\n\n\n::: {.cell .column-page layout-ncol=\"2\"}\n\n```{.r .cell-code}\n# Combined map\nggplot() +\n  geom_sf(data = combined_map, aes(fill = sovereignt)) +\n  scale_fill_manual(values = c(\"#B40C2E\", \"#03558A\")) +\n  labs(fill = \"Country\")\n```\n\n::: {.cell-output-display}\n![Output from `bind_rows`](Map-projections_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Union map\nggplot() +\n  geom_sf(data = union_map, aes(fill = sovereignt)) +\n  scale_fill_manual(values = c(\"darkgreen\")) +\n  labs(fill = \"Country\")\n```\n\n::: {.cell-output-display}\n![Output from `st_union`](Map-projections_files/figure-html/unnamed-chunk-11-2.png){width=672}\n:::\n:::\n\n\nWhile `st_union()` is not useful in this particular instance, it may be of use to you in the future!\n\n### Conclusion\n\nHere we learned how to make it possible to plot maps with two different projections together by making use of the `st_transform()` command in R. We learned how to save the two maps as separate features in a shapefile, as well as how to combine them together. We can import the shapefile into any other software for plotting.\n\n",
    "supporting": [
      "Map-projections_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}