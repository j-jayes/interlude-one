{
  "hash": "ec0e018279e68c27f031eb24ca581396",
  "result": {
    "markdown": "---\ntitle: \"Coefficient plots in `ggplot`\"\ndescription: |\n  Drawing coefficient plots in R and `ggplot`.\nimage: Iter_penguines.png\nauthor:\n  - name: Jonathan Jayes\n    url:\n      interludeone.com: {}\ndate: 2022-12-15\noutput:\n  distill::distill_article:\n    self_contained: false\n    highlight: haddock\n    highlight_downlit: true\n    toc: true\n---\n\n\n\n\nRecently a colleague asked how they could quickly draw a coefficient plot in R. In Stata, this is relatively simple - just run your regression and use the command `coefplot` afterwards. This produces a graphic that is perfectly acceptable for exploratory data analysis, but leaves something to be desired if you want to use it in a publication.\n\nThis post shows you how to draw coefficient plots in R and **ggplot**, and is extensible for use with regressions beyond the basic `lm` command.\n\n### Data\n\nFor this example we will use data from the lovely [**Palmer Penguins**](https://allisonhorst.github.io/palmerpenguins/) package from Allison Horst. The penguins dataset is a great toy dataset for exploration and visualization, based on genuine data collected by [Dr. Kristen Gorman](https://www.uaf.edu/cfos/people/faculty/detail/kristen-gorman.php) at the Palmer Station in Antarctica.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](lter_penguins.png){width=900}\n:::\n:::\n\n\n### Basic regression\n\nWe begin with a basic regression where our dependent variable is penguin body weight in grams, and independent variables are the dimensions of the penguins' bills, flipper length, as well as species and sex.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\ntheme_set(theme_light())\n\n# read in data\ndf <- palmerpenguins::penguins\n\n# basic regression\nbasic_reg <- df %>% \n    lm(body_mass_g ~ bill_length_mm + bill_depth_mm + flipper_length_mm + species + sex, data = .)\n\nbasic_reg\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = body_mass_g ~ bill_length_mm + bill_depth_mm + flipper_length_mm + \n    species + sex, data = .)\n\nCoefficients:\n      (Intercept)     bill_length_mm      bill_depth_mm  flipper_length_mm  \n         -1460.99              18.20              67.22              15.95  \n speciesChinstrap      speciesGentoo            sexmale  \n          -251.48            1014.63             389.89  \n```\n:::\n:::\n\n\nThis produces a rather messy output. It includes both the regression specification and the coefficients.\n\n### Tidy with **broom** package\n\nWe can use the [**broom**](https://broom.tidymodels.org/) package to return a `tibble`, a neat data object that is easy to work with.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(broom)\n\ntidy_reg <- df %>% \n    lm(body_mass_g ~ bill_length_mm + bill_depth_mm + flipper_length_mm + species + sex, data = .) %>% \n    tidy()\n\ntidy_reg\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7 × 5\n  term              estimate std.error statistic  p.value\n  <chr>                <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)        -1461.     571.       -2.56 1.10e- 2\n2 bill_length_mm        18.2      7.11      2.56 1.09e- 2\n3 bill_depth_mm         67.2     19.7       3.40 7.45e- 4\n4 flipper_length_mm     16.0      2.91      5.48 8.44e- 8\n5 speciesChinstrap    -251.      81.1      -3.10 2.09e- 3\n6 speciesGentoo       1015.     130.        7.83 6.85e-14\n7 sexmale              390.      47.8       8.15 7.97e-15\n```\n:::\n:::\n\n\nGreat! This output is much easier to deal with.\n\n### Coefficient plot\n\nLet's try and make a coefficient plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy_reg %>%\n  filter(term != \"(Intercept)\") %>%\n  # reorder the coefficients so that the largest is at the top of the plot\n  mutate(term = fct_reorder(term, estimate)) %>%\n  ggplot(aes(estimate, term)) +\n  geom_point() +\n  # add in a dotted line at zero\n  geom_vline(xintercept = 0, lty = 2) +\n  labs(\n    x = \"Estimate of effect of variable on body mass (in grams)\",\n    y = NULL,\n    title = \"Coefficient plot\"\n  )\n```\n\n::: {.cell-output-display}\n![](coef-plots_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nWe can see that relative to Adelie penguins (the base category), Gentoo penguins weigh more and Chinstrap penguins weigh less.\n\nFurther, male penguins weigh more than females.\n\n### Error bars\n\nTo get the error bars, we specify that we want a confidence interval when we use the `tidy` command from the **broom** package, like so: `tidy(conf.int = TRUE)`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy_reg_conf_int <- df %>% \n    lm(body_mass_g ~ bill_length_mm + bill_depth_mm + flipper_length_mm + species + sex, data = .) %>% \n    tidy(conf.int = TRUE)\n\ntidy_reg_conf_int\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7 × 7\n  term              estimate std.error statistic  p.value conf.low conf.high\n  <chr>                <dbl>     <dbl>     <dbl>    <dbl>    <dbl>     <dbl>\n1 (Intercept)        -1461.     571.       -2.56 1.10e- 2 -2585.      -337. \n2 bill_length_mm        18.2      7.11      2.56 1.09e- 2     4.22      32.2\n3 bill_depth_mm         67.2     19.7       3.40 7.45e- 4    28.4      106. \n4 flipper_length_mm     16.0      2.91      5.48 8.44e- 8    10.2       21.7\n5 speciesChinstrap    -251.      81.1      -3.10 2.09e- 3  -411.       -92.0\n6 speciesGentoo       1015.     130.        7.83 6.85e-14   760.      1270. \n7 sexmale              390.      47.8       8.15 7.97e-15   296.       484. \n```\n:::\n:::\n\n\nNow in our `tibble` we get columns called `conf.low` and `conf.high`.\n\nTo plot these, we use an additional geometry in our ggplot, called `geom_errorbarh`. Here the `h` at the end specifies we want it in the horizontal direction. We map the `conf.low` and `conf.high` variables to `xmin` and `xmax` respectively.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy_reg_conf_int %>%\n  filter(term != \"(Intercept)\") %>%\n  # reorder the coefficients so that the largest is at the top of the plot\n  mutate(term = fct_reorder(term, estimate)) %>%\n  ggplot(aes(estimate, term)) +\n  geom_point() +\n  geom_errorbarh(aes(xmin = conf.low, xmax = conf.high)) +\n  # add in a dotted line at zero\n  geom_vline(xintercept = 0, lty = 2) +\n  labs(\n    x = \"Estimate of effect of variable on body mass (in grams)\",\n    y = NULL,\n    title = \"Coefficient plot with error bars\"\n  )\n```\n\n::: {.cell-output-display}\n![](coef-plots_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nBecause none of the error bars cross the dotted line at zero, we conclude that the point estimates of the effects are significantly different from zero at the five percent level.\n\n### Categories of predictor\n\nFinally, let's facet the variables by type.\n\nWe use the `case_when` command from **dplyr** to call any variable containing `mm` a numeric variable, and the others categorical. We colour our bars and points by variable type, and `facet_wrap` to make a small multiple chart. This makes it easy to differentiate between the different types of variables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy_reg_conf_int %>%\n  filter(term != \"(Intercept)\") %>%\n  # create a type variable with case_when\n  mutate(type = case_when(\n    str_detect(term, \"mm\") ~ \"Numeric variable\",\n    TRUE ~ \"Categorical variable\"\n  )) %>%\n  # reorder the coefficients so that the largest is at the top of the plot\n  mutate(term = fct_reorder(term, estimate)) %>%\n  ggplot(aes(estimate, term, colour = type)) +\n  geom_point() +\n  geom_errorbarh(aes(xmin = conf.low, xmax = conf.high)) +\n  # add in a dotted line at zero\n  geom_vline(xintercept = 0, lty = 2) +\n  # remove the legend as the facet show that information\n  theme(legend.position = \"none\") +\n  # facet by type\n  facet_wrap(~type, scales = \"free_y\") +\n  labs(\n    x = \"Estimate of effect of variable on body mass (in grams)\",\n    y = NULL,\n    title = \"Coefficient plot with error bars\",\n    subtitle = \"By variable type\"\n  )\n```\n\n::: {.cell-output-display}\n![](coef-plots_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\nIn this way we can see that the scaling of the variables can have an impact on how we perceive the results. Because the bill and flipper dimensions are measured in mm, and the body mass in grams, we are seeing the effect of an additional mm of bill depth, for example, on body mass in grams, which appears quite small.\n\n### Conclusion\n\nGreat - I hope that this was useful! It's possible to easily customise your coefficient plots in **ggplot**, adding labels and colours to help your reader understand your regression results in a glance.\n",
    "supporting": [
      "coef-plots_files\\figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}