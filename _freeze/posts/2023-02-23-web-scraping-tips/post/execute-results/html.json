{
  "hash": "247d45df8309e725085a47339bfcfd87",
  "result": {
    "markdown": "---\ntitle: \"Web scraping tips\"\ndescription: |\n  Tips for preserving structure when web scraping with `rvest` and xpath\nimage: preview.png\nauthor:\n  - name: Jonathan Jayes\ndate: 2023-02-23\nexecute: \n  echo: true\n  warning: false\n  message: false\ndraft: true\n\n---\n\n\n## Purpose\n\nI have been helping a colleague collect some genealogical data from a website about Swedish noble families.\n\nIt involved a relatively complex web scraping problem due to the idiosyncratic nature of the web pages.\n\nI enjoyed solving the problem, and thought I would share my solution here.\n\n## Problem\n\nThe website contains information about various branches of the Swedish noble families. For example, the page we will look at tells the history of the Adelcrantz family, who were designated nobility in 1719, and of the originator Josua Törnqvist, a chamber clerk who married Cecilia Andera, daughter of the vicar in Värmdö pastorate of Uppsala archdiocese, Petrus Anderus and Christina Samuelsdotter.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Information about the Adelcrantz family from [Adelsvapen.com](https://www.adelsvapen.com/genealogi/Adelcrantz_nr_1469)](images/adelsvapen_1.PNG){width=764}\n:::\n:::\n\n\nFurther, we learn of the Forssenwald family branch, originated by Arvid Forssenwald, commissioner in the executive commission. Arvid had one child with first wife Charlotta Bergman, and four children with Anna Maria Köhnman.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Information about the Forssenwald family branch from [Adelsvapen.com](https://www.adelsvapen.com/genealogi/Adelcrantz_nr_1469)](images/adelsvapen_2.PNG){width=778}\n:::\n:::\n\n\n\nThe **problem** that we want to solve is how to preserve the structure of this information when we scrape the page. This is challenging, because the information that falls under each family branch is not of a uniform HTML class.\n\nAs I show in the two images below, the information about the originator of the family branch is a paragraph (`<p>` tag in HTML), while the bullet points about the children are list elements (`<li>`) of an unordered list (`<ul>`).\n\n\n::: {.cell}\n::: {.cell-output-display}\n![HTML tag type mismatch](images/adelsvapen_4.PNG){width=1326}\n:::\n\n::: {.cell-output-display}\n![HTML tag type mismatch](images/adelsvapen_3.PNG){width=1332}\n:::\n:::\n\n\nIf we were to grab **all of the paragraph elements and list elements from the web page**, there would be no way to recover the structure, with Carl Leonard being the first son of Arvid, and Göran the first son of Joshua.\n\nI show this in the code chunk below that collects the paragraphs from the page.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(rvest)\nlibrary(gt)\n# save url\nurl <- \"https://www.adelsvapen.com/genealogi/Adelcrantz_nr_1469\"\n# read html\nhtml <- read_html(url)\n\n# get paragraphs\nparagraphs <- html %>%\n  html_nodes(\"p\") %>%\n  html_text2() %>%\n  str_squish() %>%\n  as_tibble() %>%\n  filter(!value %in% c(\"\", \"Barn:\", \"Barn:.\")) %>% \n  rename(paragraph = value)\n\nparagraphs %>% \n  gt() %>% \n  tab_header(title = md(\"**Example of paragraphs without structure**\")) %>% \n  tab_options(column_labels.hidden = TRUE)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"xhuxctgknj\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>html {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n}\n\n#xhuxctgknj .gt_table {\n  display: table;\n  border-collapse: collapse;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#xhuxctgknj .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#xhuxctgknj .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#xhuxctgknj .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#xhuxctgknj .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 0;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#xhuxctgknj .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#xhuxctgknj .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#xhuxctgknj .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#xhuxctgknj .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#xhuxctgknj .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#xhuxctgknj .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#xhuxctgknj .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#xhuxctgknj .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#xhuxctgknj .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#xhuxctgknj .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#xhuxctgknj .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#xhuxctgknj .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#xhuxctgknj .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#xhuxctgknj .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#xhuxctgknj .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#xhuxctgknj .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#xhuxctgknj .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#xhuxctgknj .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#xhuxctgknj .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#xhuxctgknj .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#xhuxctgknj .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#xhuxctgknj .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#xhuxctgknj .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#xhuxctgknj .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#xhuxctgknj .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-left: 4px;\n  padding-right: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#xhuxctgknj .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#xhuxctgknj .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#xhuxctgknj .gt_left {\n  text-align: left;\n}\n\n#xhuxctgknj .gt_center {\n  text-align: center;\n}\n\n#xhuxctgknj .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#xhuxctgknj .gt_font_normal {\n  font-weight: normal;\n}\n\n#xhuxctgknj .gt_font_bold {\n  font-weight: bold;\n}\n\n#xhuxctgknj .gt_font_italic {\n  font-style: italic;\n}\n\n#xhuxctgknj .gt_super {\n  font-size: 65%;\n}\n\n#xhuxctgknj .gt_footnote_marks {\n  font-style: italic;\n  font-weight: normal;\n  font-size: 75%;\n  vertical-align: 0.4em;\n}\n\n#xhuxctgknj .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#xhuxctgknj .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#xhuxctgknj .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#xhuxctgknj .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#xhuxctgknj .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#xhuxctgknj .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\">\n  <thead class=\"gt_header\">\n    <tr>\n      <td colspan=\"1\" class=\"gt_heading gt_title gt_font_normal gt_bottom_border\" style><strong>Example of paragraphs without structure</strong></td>\n    </tr>\n    \n  </thead>\n  \n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"paragraph\" class=\"gt_row gt_left\">Adlad 1712-10-25, introducerad 1719. De sist levande manliga ättemedlemmarna upphöjda i friherrliga värdighet 1766 och 1777</td></tr>\n    <tr><td headers=\"paragraph\" class=\"gt_row gt_left\">Josua Törnqvist, kammarskrivare i räknekammaren. Död 1668. Gift med Cecilia Andera, dotter av kyrkoherden i Värmdö pastorat av Uppsala ärkestift Petrus Anderus och Christina Samuelsdotter.</td></tr>\n    <tr><td headers=\"paragraph\" class=\"gt_row gt_left\">Arvid Forssenwald, kommissarie i exekutionskommissionen. Död 1710-09-21 och begraven 1710-09-25 i Håtuna socken, Uppsala län. Gift 1:o 1692-12-08 i Stockholm med Charlotta Bergman, döpt 1673-09-26 i Nikolai församling, Stockholm, död 1696, dotter av råd- och handelsmannen i Stockholm. Mattias Bergman och Christina Erdtman samt syster till kammarrevisionsrådet Abraham Bergman, sedermera Bergmark, adlad Adelhielm. Gift 2:o 1697-06-15 med Anna Maria Köhnman i hennes 1:a gifte (gift 2:o med hovarkitekten Göran Törnqvist, se ovan).</td></tr>\n    <tr><td headers=\"paragraph\" class=\"gt_row gt_left\">Carl Leonard Forssenwald, adlad Adelcrantz (son av Arvid Forssenwald. Tab. 2), född 1694 i Stockholm. Student i Uppsala (Um.) 1705-05-31. Fänrik vid Västmanlands regemente 1711-08-04. Löjtnant vid Upplands femmänningskavalleriregemente 1712-02-19. Avsked 1714-09-30. Löjtnant vid Västmanlands regemente 1717-10-25. Avsked 1719-11-12. Kaptens karaktär 1734-03-28. Död (At (Sch.)) före 1745-02-22 [Lk]. Gift 1:o 1715-10-18 i Stockholm med Margareta Catharina Printzenhagen, dotter av doktor Printzenhagen och Christina Andersdotter Björn. Gift 2:o 1737-07-03 i Adelsö socken, Stockholms län med Anna Catharina Pasman, död 1740-02-06. Gift 3:o 1744 med Regina Christina Fager, född 1695, död 1766-01-08 i Stockholm, dotter av kaptenen vid Östgöta tremänningsinfanteriregemente. (Lk.) Peter Fager och Maria Stolpe.</td></tr>\n    <tr><td headers=\"paragraph\" class=\"gt_row gt_left\">Gustaf Elgenstierna, Den introducerade svenska adelns ättartavlor. 1925-36.</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n\n## Solution\n\nThe solution is to use a specific xpath, that makes use of \n\n\n::: {.cell}\n\n```{.r .cell-code}\nhtml %>%\n  html_node(xpath = \"//h2[contains(., 'Källor')]/following-sibling::*[self::p or self::ul]\") %>%\n  html_text2()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Gustaf Elgenstierna, Den introducerade svenska adelns ättartavlor. 1925-36.\"\n```\n:::\n:::\n\n\nThis expression has two parts separated by a slash (/) symbol, indicating that we're looking for an element that meets two conditions.\n\nThe first part of the expression is:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# //h2[contains(., 'Källor')]\n```\n:::\n\n\nThis part selects any h2 element that contains the text \"Källor\". The contains function checks if the text of the h2 element contains the substring 'Källor'. The . (dot) represents the current node, which is the h2 element in this case. The double slash // at the beginning indicates that the h2 element can be anywhere in the document.\n\nThe second part of the expression is:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# /following-sibling::*[self::p or self::ul]\n```\n:::\n\n\nThis part selects all the sibling elements that come after the h2 element we found in the first part, which satisfy the condition of being a p or ul element.\n\nThe following-sibling axis selects all the sibling elements that come after the current node. The * (asterisk) selects all elements. The square brackets [self::p or self::ul] filter the selected elements to only include those that are either a p or a ul element.\n\nSo, putting it all together, this XPath expression selects all the p and ul elements that come after any h2 element that contains the text \"Källor\" in the document.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}