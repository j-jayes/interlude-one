{
  "hash": "c639f276032e08a419657688f7a27b20",
  "result": {
    "markdown": "---\ntitle: \"Transforming National Budget Reviews into Queryable Knowledge: A Tutorial with LangChain\"\nformat: html\ndraft: true\n---\n\n\nImagine the power to query an entire country's budget documents as easily as asking Alexa about the weather. This isn't a futuristic fantasy. It's here, now. Using a powerful tool named [LangChain](https://python.langchain.com/docs/get_started/introduction.html), a framework that allows us to connect a large language model to our own data, we've transformed the South African National Budget Review and Budget speech into an interactive, queryable knowledge base. In this article, we delve into the process of how we breathed life into hundreds of pages of PDFs, and how you can do the same with your own data. The output in this case is a table of summary statistics that would have taken a human hours to compile, but which we can now generate in seconds.\n\n## The challenge\n\nOne of the claims of generative AI is that it will free humans from labourious tasks which are currently tedious to do manually and challenging to automate. In this article, we'll explore how we can use LangChain to automate the process of extracting information from PDF documents.\n\nThe National Treasury in South Africa produces a fantastically informative budget review each year. It includes headline figures like GDP growth, inflation, revenue and expenditure, as well as more detailed information about the budget for each government department. In addition, the budget speech is delivered by the Minister of Finance, and contains a wealth of information about the budget, including the government's priorities for the year, and the reasoning behind the budget allocations. \n\nIf we want to get specific information from these documents, we can read through them and extract the information manually, searching for specific terms with the control + F functionality. This is a time consuming process, and it's easy to make mistakes. What if we could ask a computer to do it for us?\n\n:::{.callout-note}\nThere are, in addition to the PDF documents a series of excel files that National Treasury releases too. These files do contain the information that we want, but are not in an easily machine readable format[^There are ideosyncracies between each year that mean ingesting this data into a tidy format is time consuming]. Useful tools like [EconData](https://codera.co.za/econdata/) from [Codera Analytics](https://codera.co.za/) make it much easier to access this data programatically.\n\n:::\n\n## The solution: a vector database and a Large Language Model\n\nIn essence, to transform budget documents into a queryable database, we read in the PDFs, segment them into chunks, and store the text in a database. To query this database, we use a simple similarity calculation to find the most relevant chunks of text, which are then fed to a large language model to answer our questions.\n\nHere is a diagram of the process:\n\n:::{.column-page}\n\n\n```{mermaid}\ngraph LR\n    A((Budget Documents PDF)) -->|Chunking<br>Vectorization| B{Chroma DB}\n    C[User Query] -->|Vectorization| D{Chroma DB}\n    D --> E[Top-n Similar Chunks]\n    E --> F{Large Language <br>Model Context Window}\n    F --> G((Answer))\n    style A fill:#f9d,stroke:#333,stroke-width:2px\n    style B fill:#fc0,stroke:#333,stroke-width:2px\n    style C fill:#f9d,stroke:#333,stroke-width:2px\n    style D fill:#fc0,stroke:#333,stroke-width:2px\n    style E fill:#9cf,stroke:#333,stroke-width:2px\n    style F fill:#fc0,stroke:#333,stroke-width:2px\n    style G fill:#9cf,stroke:#333,stroke-width:2px\n\n```\n\n\n:::\n\n## An example: What was Consumer Price Inflation in 2022?\n\nSay for instance that we want to know what Consumer Price Inflation was in 2022 in South Africa. We can ask the question in a natural language query, and the system will return the answer. Here is the query and the answer, along with the source documents that the system used to answer the question:\n\n| Query                           | Result | Source documents                                                                                                                                                                                                                                                                                                                                                                                      |\n|---------------------------------|--------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| What was Consumer Price Inflation inflation in 2022? | 6.9%   | Document(page_content=to moderate in 2023, before rising gradually over the medium term . \\nInflation  \\nHeadline inflation peaked in the third quarter and averaged 6.9  per cent during 2022 . \\nInflation is projected  is estimated  to ease to 5.3 per cent in 2023. Global crude oil and \\ndomestic food prices remain sources of inflationary pressure. Electricity prices have been \\nrevised up by 4.6 per cent over the medium term compared to the 2022 MTBPS and are', metadata={'source': 'c:\\\\Users\\\\User\\\\Documents\\\\Recon\\\\langchain-budget-speech-demo\\\\budget-documents\\\\budget-review-2023.pdf', 'page': 39}),\n|                                 |        | Document(page_content='CHAPTER 1 NAVIGATING AN UNEVEN ECONOMIC RECOVERY Real percentage growth 2022 2023 2024 2025 Estimate Forecast Household consumption 2.8 1.0 1.5 1.8 Gross fixed-capital formation 4.2 1.3 3.8 3.5 Exports 8.8 1.0 2.2 2.9 Imports 14.0 1.1 2.3 2.9 Real GDP growth 2.5 0.9 1.5 1.8 Consumer price index (CPI) inflation 6.9 5.3 4.9 4.7 Current account balance (% of GDP) -0.4 -1.8 -2.0 -2.1 ', metadata={'source': 'c:\\\\Users\\\\User\\\\Documents\\\\Recon\\\\langchain-budget-speech-demo\\\\budget-documents\\\\budget-review-2023.pdf', 'page': 27}), |\n\nIn the table above, we can see two of the chunks of text that are most similar in terms of content to our query. The first chunk is from page 39 of the budget review, and the second chunk is from page 27. Both of these chunks contain the information that we are looking for, and the system has correctly identified them as the most relevant chunks.\n\nThese chunks are then passed to the OpenAI GPT-3.5 large language model, which is able to take in the question and the context, and then return to us the answer. In this case, the answer is 6.9%, which is correct, as we can see in the table from the budget review below (which is the same as the second source document in the markdown table above).\n\n![Screenshot of table from 2023 Budget Review](macro_outlook.png)\n\n## What is going on in the background?\n\nYou can have a look at my [GitHub repository](https://github.com/j-jayes/langchain-budget-speech-demo/blob/main/langchain-budget-documents-demo.ipynb) for the full code, but I'll walk through the main steps here.\n\n1. **Set Up:**  The first step is to set up LangChain using an OpenAI key. This example uses OpenAI for both the language model and the embeddings. \n2. **Load Documents:**  LangChain can load multiple documents at once. In this example, PDF files containing the 2023 budget review and 2023 budget speech are loaded.\n3. **Split Data:**  The data is then split into chunks. Each chunk corresponds to a portion of information from a specific page of the budget documents. \n4. **Create a Database:**  A vector store database is created to store and index the document embeddings, which are vector representations of the text chunks. The embeddings are generated using OpenAI and stored in a database using a tool named ChromaDB. \n5. **Retrieve Relevant Documents:**  A retriever is then set up to query the vector database and return relevant documents. The number of documents returned can be adjusted according to the user's needs. In this case, I used fewer chunks with larger number of tokens per chunk compared to the default as it worked best.\n6. **Language Model Chain:**  After setting up the retriever, a retrieval-question-answering chain is created using OpenAI. This chain is capable of answering queries based on the contents of the chunks that are passed to it, depending on the words in the query.\n7. **Format Output:**  A function is created to present the results and source documents neatly. This is what we show in the markdown table above.\n8. **Querying:**  The system is now ready for queries. A query is input and the system returns the most relevant response based on the indexed documents. In this case, we worked through each years' budget documents from 2010 to 2022 to find values for seven data series.\n\nHave a look at the output in the table below.\n\n\n\n::: {.cell .column-page}\n::: {.cell-output-display}\n```{=html}\n<div id=\"guppmyznub\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>html {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n}\n\n#guppmyznub .gt_table {\n  display: table;\n  border-collapse: collapse;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#guppmyznub .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#guppmyznub .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#guppmyznub .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#guppmyznub .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 0;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#guppmyznub .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#guppmyznub .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#guppmyznub .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#guppmyznub .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#guppmyznub .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#guppmyznub .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#guppmyznub .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#guppmyznub .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#guppmyznub .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#guppmyznub .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#guppmyznub .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#guppmyznub .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#guppmyznub .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#guppmyznub .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#guppmyznub .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#guppmyznub .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#guppmyznub .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#guppmyznub .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#guppmyznub .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#guppmyznub .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#guppmyznub .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#guppmyznub .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#guppmyznub .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#guppmyznub .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#guppmyznub .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-left: 4px;\n  padding-right: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#guppmyznub .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#guppmyznub .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#guppmyznub .gt_left {\n  text-align: left;\n}\n\n#guppmyznub .gt_center {\n  text-align: center;\n}\n\n#guppmyznub .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#guppmyznub .gt_font_normal {\n  font-weight: normal;\n}\n\n#guppmyznub .gt_font_bold {\n  font-weight: bold;\n}\n\n#guppmyznub .gt_font_italic {\n  font-style: italic;\n}\n\n#guppmyznub .gt_super {\n  font-size: 65%;\n}\n\n#guppmyznub .gt_footnote_marks {\n  font-style: italic;\n  font-weight: normal;\n  font-size: 75%;\n  vertical-align: 0.4em;\n}\n\n#guppmyznub .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#guppmyznub .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#guppmyznub .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#guppmyznub .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#guppmyznub .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#guppmyznub .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\">\n  <thead class=\"gt_header\">\n    <tr>\n      <td colspan=\"14\" class=\"gt_heading gt_title gt_font_normal gt_bottom_border\" style>Selected series from Budget Reviews and Budget Speeches (2010-2022)</td>\n    </tr>\n    \n  </thead>\n  <thead class=\"gt_col_headings\">\n    <tr>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Key\">Key</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"2010\">2010</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"2011\">2011</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"2012\">2012</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"2013\">2013</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"2014\">2014</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"2015\">2015</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"2016\">2016</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"2017\">2017</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"2018\">2018</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"2019\">2019</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"2020\">2020</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"2021\">2021</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"2022\">2022</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"Key\" class=\"gt_row gt_left\">Budget balance (% of GDP)</td>\n<td headers=\"2010\" class=\"gt_row gt_right\">-5.30</td>\n<td headers=\"2011\" class=\"gt_row gt_right\">-4.80</td>\n<td headers=\"2012\" class=\"gt_row gt_right\">5.2</td>\n<td headers=\"2013\" class=\"gt_row gt_right\">-4.00</td>\n<td headers=\"2014\" class=\"gt_row gt_right\">-3.9</td>\n<td headers=\"2015\" class=\"gt_row gt_right\">-3.9</td>\n<td headers=\"2016\" class=\"gt_row gt_right\">-3.40</td>\n<td headers=\"2017\" class=\"gt_row gt_right\">-4.30</td>\n<td headers=\"2018\" class=\"gt_row gt_right\">-3.70</td>\n<td headers=\"2019\" class=\"gt_row gt_right\">-6.30</td>\n<td headers=\"2020\" class=\"gt_row gt_right\">-14.00</td>\n<td headers=\"2021\" class=\"gt_row gt_right\">-5.70</td>\n<td headers=\"2022\" class=\"gt_row gt_right\">-4.2</td></tr>\n    <tr><td headers=\"Key\" class=\"gt_row gt_left\">GDP (current ZAR[billions])</td>\n<td headers=\"2010\" class=\"gt_row gt_right\">2.67</td>\n<td headers=\"2011\" class=\"gt_row gt_right\">2.94</td>\n<td headers=\"2012\" class=\"gt_row gt_right\"></td>\n<td headers=\"2013\" class=\"gt_row gt_right\">3.39</td>\n<td headers=\"2014\" class=\"gt_row gt_right\">3.8</td>\n<td headers=\"2015\" class=\"gt_row gt_right\"></td>\n<td headers=\"2016\" class=\"gt_row gt_right\">4.32</td>\n<td headers=\"2017\" class=\"gt_row gt_right\"></td>\n<td headers=\"2018\" class=\"gt_row gt_right\">4.96</td>\n<td headers=\"2019\" class=\"gt_row gt_right\">5.09</td>\n<td headers=\"2020\" class=\"gt_row gt_right\">4.93</td>\n<td headers=\"2021\" class=\"gt_row gt_right\">6.17</td>\n<td headers=\"2022\" class=\"gt_row gt_right\">6.6</td></tr>\n    <tr><td headers=\"Key\" class=\"gt_row gt_left\">GDP growth (%)</td>\n<td headers=\"2010\" class=\"gt_row gt_right\">3.40</td>\n<td headers=\"2011\" class=\"gt_row gt_right\">3.10</td>\n<td headers=\"2012\" class=\"gt_row gt_right\">2.5</td>\n<td headers=\"2013\" class=\"gt_row gt_right\">1.80</td>\n<td headers=\"2014\" class=\"gt_row gt_right\">1.4</td>\n<td headers=\"2015\" class=\"gt_row gt_right\">1.3</td>\n<td headers=\"2016\" class=\"gt_row gt_right\">0.50</td>\n<td headers=\"2017\" class=\"gt_row gt_right\">0.01</td>\n<td headers=\"2018\" class=\"gt_row gt_right\">0.70</td>\n<td headers=\"2019\" class=\"gt_row gt_right\">0.30</td>\n<td headers=\"2020\" class=\"gt_row gt_right\">-7.20</td>\n<td headers=\"2021\" class=\"gt_row gt_right\">4.80</td>\n<td headers=\"2022\" class=\"gt_row gt_right\">2.5</td></tr>\n    <tr><td headers=\"Key\" class=\"gt_row gt_left\">General government debt (% of GDP)</td>\n<td headers=\"2010\" class=\"gt_row gt_right\">25.70</td>\n<td headers=\"2011\" class=\"gt_row gt_right\">33.50</td>\n<td headers=\"2012\" class=\"gt_row gt_right\">41.8</td>\n<td headers=\"2013\" class=\"gt_row gt_right\">34.90</td>\n<td headers=\"2014\" class=\"gt_row gt_right\">40.8</td>\n<td headers=\"2015\" class=\"gt_row gt_right\">44.8</td>\n<td headers=\"2016\" class=\"gt_row gt_right\">45.70</td>\n<td headers=\"2017\" class=\"gt_row gt_right\">53.30</td>\n<td headers=\"2018\" class=\"gt_row gt_right\">55.60</td>\n<td headers=\"2019\" class=\"gt_row gt_right\">61.60</td>\n<td headers=\"2020\" class=\"gt_row gt_right\">80.30</td>\n<td headers=\"2021\" class=\"gt_row gt_right\">69.50</td>\n<td headers=\"2022\" class=\"gt_row gt_right\">71.1</td></tr>\n    <tr><td headers=\"Key\" class=\"gt_row gt_left\">General government expenditure (% of GDP)</td>\n<td headers=\"2010\" class=\"gt_row gt_right\">30.80</td>\n<td headers=\"2011\" class=\"gt_row gt_right\">32.60</td>\n<td headers=\"2012\" class=\"gt_row gt_right\">32.9</td>\n<td headers=\"2013\" class=\"gt_row gt_right\">33.20</td>\n<td headers=\"2014\" class=\"gt_row gt_right\">32.0</td>\n<td headers=\"2015\" class=\"gt_row gt_right\">33.9</td>\n<td headers=\"2016\" class=\"gt_row gt_right\">32.80</td>\n<td headers=\"2017\" class=\"gt_row gt_right\">33.20</td>\n<td headers=\"2018\" class=\"gt_row gt_right\">32.90</td>\n<td headers=\"2019\" class=\"gt_row gt_right\">29.40</td>\n<td headers=\"2020\" class=\"gt_row gt_right\">41.70</td>\n<td headers=\"2021\" class=\"gt_row gt_right\">33.20</td>\n<td headers=\"2022\" class=\"gt_row gt_right\">32.6</td></tr>\n    <tr><td headers=\"Key\" class=\"gt_row gt_left\">General government revenue (% of GDP)</td>\n<td headers=\"2010\" class=\"gt_row gt_right\">28.30</td>\n<td headers=\"2011\" class=\"gt_row gt_right\">27.70</td>\n<td headers=\"2012\" class=\"gt_row gt_right\">27.7</td>\n<td headers=\"2013\" class=\"gt_row gt_right\">29.20</td>\n<td headers=\"2014\" class=\"gt_row gt_right\">28.1</td>\n<td headers=\"2015\" class=\"gt_row gt_right\">30.0</td>\n<td headers=\"2016\" class=\"gt_row gt_right\">29.40</td>\n<td headers=\"2017\" class=\"gt_row gt_right\">28.80</td>\n<td headers=\"2018\" class=\"gt_row gt_right\">28.80</td>\n<td headers=\"2019\" class=\"gt_row gt_right\">29.40</td>\n<td headers=\"2020\" class=\"gt_row gt_right\">27.70</td>\n<td headers=\"2021\" class=\"gt_row gt_right\">27.50</td>\n<td headers=\"2022\" class=\"gt_row gt_right\">28.5</td></tr>\n    <tr><td headers=\"Key\" class=\"gt_row gt_left\">Inflation (CPI) (%)</td>\n<td headers=\"2010\" class=\"gt_row gt_right\">4.30</td>\n<td headers=\"2011\" class=\"gt_row gt_right\">5.00</td>\n<td headers=\"2012\" class=\"gt_row gt_right\">5.4</td>\n<td headers=\"2013\" class=\"gt_row gt_right\">5.70</td>\n<td headers=\"2014\" class=\"gt_row gt_right\">5.3</td>\n<td headers=\"2015\" class=\"gt_row gt_right\">4.6</td>\n<td headers=\"2016\" class=\"gt_row gt_right\">6.40</td>\n<td headers=\"2017\" class=\"gt_row gt_right\">5.30</td>\n<td headers=\"2018\" class=\"gt_row gt_right\">4.70</td>\n<td headers=\"2019\" class=\"gt_row gt_right\">4.10</td>\n<td headers=\"2020\" class=\"gt_row gt_right\">3.30</td>\n<td headers=\"2021\" class=\"gt_row gt_right\">4.80</td>\n<td headers=\"2022\" class=\"gt_row gt_right\">6.9</td></tr>\n  </tbody>\n  <tfoot class=\"gt_sourcenotes\">\n    <tr>\n      <td class=\"gt_sourcenote\" colspan=\"14\">Source: National Treasury of South Africa</td>\n    </tr>\n  </tfoot>\n  \n</table>\n</div>\n```\n:::\n:::\n\n\n## Visualising the data\n\nWe can also make a plot of our selected series:\n\n\n::: {.cell .column-page layout-align=\"center\"}\n::: {.cell-output-display}\n![](langchain-demo_files/figure-html/unnamed-chunk-3-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n## What do we learn?\n\nThere are some missing values, particularly in the series `GDP (current ZAR[billions])` and `Budget balance (% of GDP)`.\n\nIn addition, in 2019, the government expenditure figure is incorectly plucked from the PDF document as 29.40% of GDP, when in reality, this was 35.70% of GDP. This is a significant error, and it is not clear why this happened. It is possible that the PDF document was not correctly parsed, or that the OpenAI API made an error extracting this value from the text chunk.\n\nIn order to overcome these kinds of errors, experimenting with multiple pipelines and chunk sizes is probably the best way to go. This was just a demonstration, and there is certainly a possiblity to make the pipline more robust and less error prone. \n\n## Conclusion\n\nThough we have used budget data from South Africa in this case, the same approach can be used for any kind of data. LangChain has document loaders for text, PDF, and HTML, and can be used to extract information from many kinds of document.",
    "supporting": [
      "langchain-demo_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}